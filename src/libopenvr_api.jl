# Julia wrapper for header: /home/christianl/owncloud/arbeit/tetshared/FEM/FEMday/OpenVR/deps/openvr-1.2.10/headers/openvr_capi.h
# Automaticcally generated using Clang.jl wrap_c

# Julia wrapper for header: /home/christianl/owncloud/arbeit/tetshared/FEM/FEMday/OpenVR/deps/openvr_capi_cxxapi.h
# Automaticcally generated using Clang.jl wrap_c

function VR_InitInternal(peError, eType)
    ccall((:VR_InitInternal, libopenvr), intptr_t, (Ptr{EVRInitError}, EVRApplicationType), peError, eType)
end

function VR_ShutdownInternal()
    ccall((:VR_ShutdownInternal, libopenvr), Cvoid, ())
end

function VR_IsHmdPresent()
    ccall((:VR_IsHmdPresent, libopenvr), bool, ())
end

function VR_GetGenericInterface(pchInterfaceVersion, peError)
    ccall((:VR_GetGenericInterface, libopenvr), intptr_t, (Cstring, Ptr{EVRInitError}), pchInterfaceVersion, peError)
end

function VR_IsRuntimeInstalled()
    ccall((:VR_IsRuntimeInstalled, libopenvr), bool, ())
end

function VR_GetVRInitErrorAsSymbol(error)
    ccall((:VR_GetVRInitErrorAsSymbol, libopenvr), Cstring, (EVRInitError,), error)
end

function VR_GetVRInitErrorAsEnglishDescription(error)
    ccall((:VR_GetVRInitErrorAsEnglishDescription, libopenvr), Cstring, (EVRInitError,), error)
end

function GetGenericInterface(str)
  e = Ref(EVRInitError)
  r = VR_GetGenericInterface(str,e)
  if e[] != VRInitError_None
    println("GetGenericInterface on $str returned error $e[]\n  $(unsafe_string(VR_GetVRInitErrorAsSymbol(e[])))")
  end
  return r
end

VRSystem()         = reinterpret(Ptr{IVRSystem}         , GetGenericInterface(IVRSystem_Version         ))
VRExtendedDisplay()= reinterpret(Ptr{IVRExtendedDisplay}, GetGenericInterface(IVRExtendedDisplay_Version))
VRTrackedCamera()  = reinterpret(Ptr{IVRTrackedCamera}  , GetGenericInterface(IVRTrackedCamera_Version  ))
VRApplications()   = reinterpret(Ptr{IVRApplications}   , GetGenericInterface(IVRApplications_Version   ))
VRChaperone()      = reinterpret(Ptr{IVRChaperone}      , GetGenericInterface(IVRChaperone_Version      ))
VRChaperoneSetup() = reinterpret(Ptr{IVRChaperoneSetup} , GetGenericInterface(IVRChaperoneSetup_Version ))
VRCompositor()     = reinterpret(Ptr{IVRCompositor}     , GetGenericInterface(IVRCompositor_Version     ))
VROverlay()        = reinterpret(Ptr{IVROverlay}        , GetGenericInterface(IVROverlay_Version        ))
VRRenderModels()   = reinterpret(Ptr{IVRRenderModels}   , GetGenericInterface(IVRRenderModels_Version   ))
VRNotifications()  = reinterpret(Ptr{IVRNotifications}  , GetGenericInterface(IVRNotifications_Version  ))
VRSettings()       = reinterpret(Ptr{IVRSettings}       , GetGenericInterface(IVRSettings_Version       ))
VRScreenshots()    = reinterpret(Ptr{IVRScreenshots}    , GetGenericInterface(IVRScreenshots_Version    ))
VRResources()      = reinterpret(Ptr{IVRResources}      , GetGenericInterface(IVRResources_Version      ))
VRDriverManager()  = reinterpret(Ptr{IVRDriverManager}  , GetGenericInterface(IVRDriverManager_Version  ))
VRInput()          = reinterpret(Ptr{IVRInput}          , GetGenericInterface(IVRInput_Version          ))
VRIOBuffer()       = reinterpret(Ptr{IVRIOBuffer}       , GetGenericInterface(IVRIOBuffer_Version       ))
VRSpatialAnchors() = reinterpret(Ptr{IVRSpatialAnchors} , GetGenericInterface(IVRSpatialAnchors_Version ))


GetRecommendedRenderTargetSize(                  this, pnWidth, pnHeight)                                                                                                               = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetRecommendedRenderTargetSize,  Cvoid, (Ptr{UInt32}, Ptr{UInt32},), pnWidth, pnHeight)
GetProjectionMatrix(                             this, eEye, fNearZ, fFarZ)                                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetProjectionMatrix,  HmdMatrix44_t, (EVREye, Cfloat, Cfloat,), eEye, fNearZ, fFarZ)
GetProjectionRaw(                                this, eEye, pfLeft, pfRight, pfTop, pfBottom)                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetProjectionRaw,  Cvoid, (EVREye, Ptr{Cfloat}, Ptr{Cfloat}, Ptr{Cfloat}, Ptr{Cfloat},), eEye, pfLeft, pfRight, pfTop, pfBottom)
ComputeDistortion(                               this, eEye, fU, fV, pDistortionCoordinates)                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).ComputeDistortion,  bool, (EVREye, Cfloat, Cfloat, Ptr{DistortionCoordinates_t},), eEye, fU, fV, pDistortionCoordinates)
GetEyeToHeadTransform(                           this, eEye)                                                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetEyeToHeadTransform,  HmdMatrix34_t, (EVREye,), eEye)
GetTimeSinceLastVsync(                           this, pfSecondsSinceLastVsync, pulFrameCounter)                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetTimeSinceLastVsync,  bool, (Ptr{Cfloat}, Ptr{UInt64},), pfSecondsSinceLastVsync, pulFrameCounter)
GetD3D9AdapterIndex(                             this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetD3D9AdapterIndex,  Int32, ())
GetDXGIOutputInfo(                               this, pnAdapterIndex)                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetDXGIOutputInfo,  Cvoid, (Ptr{Int32},), pnAdapterIndex)
GetOutputDevice(                                 this, pnDevice, textureType, pInstance)                                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetOutputDevice,  Cvoid, (Ptr{UInt64}, ETextureType, Ptr{VkInstance_T},), pnDevice, textureType, pInstance)
IsDisplayOnDesktop(                              this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).IsDisplayOnDesktop,  bool, ())
SetDisplayVisibility(                            this, bIsVisibleOnDesktop)                                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).SetDisplayVisibility,  bool, (bool,), bIsVisibleOnDesktop)
GetDeviceToAbsoluteTrackingPose(                 this, eOrigin, fPredictedSecondsToPhotonsFromNow, pTrackedDevicePoseArray, unTrackedDevicePoseArrayCount)                              = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetDeviceToAbsoluteTrackingPose,  Cvoid, (ETrackingUniverseOrigin, Cfloat, Ptr{TrackedDevicePose_t}, UInt32,), eOrigin, fPredictedSecondsToPhotonsFromNow, pTrackedDevicePoseArray, unTrackedDevicePoseArrayCount)
ResetSeatedZeroPose(                             this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).ResetSeatedZeroPose,  Cvoid, ())
GetSeatedZeroPoseToStandingAbsoluteTrackingPose( this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetSeatedZeroPoseToStandingAbsoluteTrackingPose,  HmdMatrix34_t, ())
GetRawZeroPoseToStandingAbsoluteTrackingPose(    this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetRawZeroPoseToStandingAbsoluteTrackingPose,  HmdMatrix34_t, ())
GetSortedTrackedDeviceIndicesOfClass(            this, eTrackedDeviceClass, punTrackedDeviceIndexArray, unTrackedDeviceIndexArrayCount, unRelativeToTrackedDeviceIndex)                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetSortedTrackedDeviceIndicesOfClass,  UInt32, (ETrackedDeviceClass, Ptr{TrackedDeviceIndex_t}, UInt32, TrackedDeviceIndex_t,), eTrackedDeviceClass, punTrackedDeviceIndexArray, unTrackedDeviceIndexArrayCount, unRelativeToTrackedDeviceIndex)
GetTrackedDeviceActivityLevel(                   this, unDeviceId)                                                                                                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetTrackedDeviceActivityLevel,  EDeviceActivityLevel, (TrackedDeviceIndex_t,), unDeviceId)
ApplyTransform(                                  this, pOutputPose, pTrackedDevicePose, pTransform)                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).ApplyTransform,  Cvoid, (Ptr{TrackedDevicePose_t}, Ptr{TrackedDevicePose_t}, Ptr{HmdMatrix34_t},), pOutputPose, pTrackedDevicePose, pTransform)
GetTrackedDeviceIndexForControllerRole(          this, unDeviceType)                                                                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetTrackedDeviceIndexForControllerRole,  TrackedDeviceIndex_t, (ETrackedControllerRole,), unDeviceType)
GetControllerRoleForTrackedDeviceIndex(          this, unDeviceIndex)                                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetControllerRoleForTrackedDeviceIndex,  ETrackedControllerRole, (TrackedDeviceIndex_t,), unDeviceIndex)
GetTrackedDeviceClass(                           this, unDeviceIndex)                                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetTrackedDeviceClass,  ETrackedDeviceClass, (TrackedDeviceIndex_t,), unDeviceIndex)
IsTrackedDeviceConnected(                        this, unDeviceIndex)                                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).IsTrackedDeviceConnected,  bool, (TrackedDeviceIndex_t,), unDeviceIndex)
GetBoolTrackedDeviceProperty(                    this, unDeviceIndex, prop, pError)                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetBoolTrackedDeviceProperty,  bool, (TrackedDeviceIndex_t, ETrackedDeviceProperty, Ptr{ETrackedPropertyError},), unDeviceIndex, prop, pError)
GetFloatTrackedDeviceProperty(                   this, unDeviceIndex, prop, pError)                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetFloatTrackedDeviceProperty,  Cfloat, (TrackedDeviceIndex_t, ETrackedDeviceProperty, Ptr{ETrackedPropertyError},), unDeviceIndex, prop, pError)
GetInt32TrackedDeviceProperty(                   this, unDeviceIndex, prop, pError)                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetInt32TrackedDeviceProperty,  Int32, (TrackedDeviceIndex_t, ETrackedDeviceProperty, Ptr{ETrackedPropertyError},), unDeviceIndex, prop, pError)
GetUint64TrackedDeviceProperty(                  this, unDeviceIndex, prop, pError)                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetUint64TrackedDeviceProperty,  UInt64, (TrackedDeviceIndex_t, ETrackedDeviceProperty, Ptr{ETrackedPropertyError},), unDeviceIndex, prop, pError)
GetMatrix34TrackedDeviceProperty(                this, unDeviceIndex, prop, pError)                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetMatrix34TrackedDeviceProperty,  HmdMatrix34_t, (TrackedDeviceIndex_t, ETrackedDeviceProperty, Ptr{ETrackedPropertyError},), unDeviceIndex, prop, pError)
GetArrayTrackedDeviceProperty(                   this, unDeviceIndex, prop, propType, pBuffer, unBufferSize, pError)                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetArrayTrackedDeviceProperty,  UInt32, (TrackedDeviceIndex_t, ETrackedDeviceProperty, PropertyTypeTag_t, Ptr{Cvoid}, UInt32, Ptr{ETrackedPropertyError},), unDeviceIndex, prop, propType, pBuffer, unBufferSize, pError)
GetStringTrackedDeviceProperty(                  this, unDeviceIndex, prop, pchValue, unBufferSize, pError)                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetStringTrackedDeviceProperty,  UInt32, (TrackedDeviceIndex_t, ETrackedDeviceProperty, Cstring, UInt32, Ptr{ETrackedPropertyError},), unDeviceIndex, prop, pchValue, unBufferSize, pError)
GetPropErrorNameFromEnum(                        this, error)                                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetPropErrorNameFromEnum,  Cstring, (ETrackedPropertyError,), error)
PollNextEvent(                                   this, pEvent, uncbVREvent)                                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).PollNextEvent,  bool, (Ptr{VREvent_t}, UInt32,), pEvent, uncbVREvent)
PollNextEventWithPose(                           this, eOrigin, pEvent, uncbVREvent, pTrackedDevicePose)                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).PollNextEventWithPose,  bool, (ETrackingUniverseOrigin, Ptr{VREvent_t}, UInt32, Ptr{TrackedDevicePose_t},), eOrigin, pEvent, uncbVREvent, pTrackedDevicePose)
GetEventTypeNameFromEnum(                        this, eType)                                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetEventTypeNameFromEnum,  Cstring, (EVREventType,), eType)
GetHiddenAreaMesh(                               this, eEye, type)                                                                                                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetHiddenAreaMesh,  HiddenAreaMesh_t, (EVREye, EHiddenAreaMeshType,), eEye, type)
GetControllerState(                              this, unControllerDeviceIndex, pControllerState, unControllerStateSize)                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetControllerState,  bool, (TrackedDeviceIndex_t, Ptr{VRControllerState_t}, UInt32,), unControllerDeviceIndex, pControllerState, unControllerStateSize)
GetControllerStateWithPose(                      this, eOrigin, unControllerDeviceIndex, pControllerState, unControllerStateSize, pTrackedDevicePose)                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetControllerStateWithPose,  bool, (ETrackingUniverseOrigin, TrackedDeviceIndex_t, Ptr{VRControllerState_t}, UInt32, Ptr{TrackedDevicePose_t},), eOrigin, unControllerDeviceIndex, pControllerState, unControllerStateSize, pTrackedDevicePose)
TriggerHapticPulse(                              this, unControllerDeviceIndex, unAxisId, usDurationMicroSec)                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).TriggerHapticPulse,  Cvoid, (TrackedDeviceIndex_t, UInt32, UInt16,), unControllerDeviceIndex, unAxisId, usDurationMicroSec)
GetButtonIdNameFromEnum(                         this, eButtonId)                                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetButtonIdNameFromEnum,  Cstring, (EVRButtonId,), eButtonId)
GetControllerAxisTypeNameFromEnum(               this, eAxisType)                                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).GetControllerAxisTypeNameFromEnum,  Cstring, (EVRControllerAxisType,), eAxisType)
IsInputAvailable(                                this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).IsInputAvailable,  bool, ())
IsSteamVRDrawingControllers(                     this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).IsSteamVRDrawingControllers,  bool, ())
ShouldApplicationPause(                          this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).ShouldApplicationPause,  bool, ())
ShouldApplicationReduceRenderingWork(            this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).ShouldApplicationReduceRenderingWork,  bool, ())
DriverDebugRequest(                              this, unDeviceIndex, pchRequest, pchResponseBuffer, unResponseBufferSize)                                                              = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).DriverDebugRequest,  UInt32, (TrackedDeviceIndex_t, Cstring, Cstring, UInt32,), unDeviceIndex, pchRequest, pchResponseBuffer, unResponseBufferSize)
PerformFirmwareUpdate(                           this, unDeviceIndex)                                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).PerformFirmwareUpdate,  EVRFirmwareError, (TrackedDeviceIndex_t,), unDeviceIndex)
AcknowledgeQuit_Exiting(                         this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).AcknowledgeQuit_Exiting,  Cvoid, ())
AcknowledgeQuit_UserPrompt(                      this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSystem_FnTable},this)).AcknowledgeQuit_UserPrompt,  Cvoid, ())
GetWindowBounds(                                 this, pnX, pnY, pnWidth, pnHeight)                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRExtendedDisplay_FnTable},this)).GetWindowBounds,  Cvoid, (Ptr{Int32}, Ptr{Int32}, Ptr{UInt32}, Ptr{UInt32},), pnX, pnY, pnWidth, pnHeight)
GetEyeOutputViewport(                            this, eEye, pnX, pnY, pnWidth, pnHeight)                                                                                               = ccall(unsafe_load(reinterpret(Ptr{VR_IVRExtendedDisplay_FnTable},this)).GetEyeOutputViewport,  Cvoid, (EVREye, Ptr{UInt32}, Ptr{UInt32}, Ptr{UInt32}, Ptr{UInt32},), eEye, pnX, pnY, pnWidth, pnHeight)
GetDXGIOutputInfo(                               this, pnAdapterIndex, pnAdapterOutputIndex)                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRExtendedDisplay_FnTable},this)).GetDXGIOutputInfo,  Cvoid, (Ptr{Int32}, Ptr{Int32},), pnAdapterIndex, pnAdapterOutputIndex)
GetCameraErrorNameFromEnum(                      this, eCameraError)                                                                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).GetCameraErrorNameFromEnum,  Cstring, (EVRTrackedCameraError,), eCameraError)
HasCamera(                                       this, nDeviceIndex, pHasCamera)                                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).HasCamera,  EVRTrackedCameraError, (TrackedDeviceIndex_t, Ptr{bool},), nDeviceIndex, pHasCamera)
GetCameraFrameSize(                              this, nDeviceIndex, eFrameType, pnWidth, pnHeight, pnFrameBufferSize)                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).GetCameraFrameSize,  EVRTrackedCameraError, (TrackedDeviceIndex_t, EVRTrackedCameraFrameType, Ptr{UInt32}, Ptr{UInt32}, Ptr{UInt32},), nDeviceIndex, eFrameType, pnWidth, pnHeight, pnFrameBufferSize)
GetCameraIntrinsics(                             this, nDeviceIndex, nCameraIndex, eFrameType, pFoccallength, pCenter)                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).GetCameraIntrinsics,  EVRTrackedCameraError, (TrackedDeviceIndex_t, UInt32, EVRTrackedCameraFrameType, Ptr{HmdVector2_t}, Ptr{HmdVector2_t},), nDeviceIndex, nCameraIndex, eFrameType, pFoccallength, pCenter)
GetCameraProjection(                             this, nDeviceIndex, nCameraIndex, eFrameType, flZNear, flZFar, pProjection)                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).GetCameraProjection,  EVRTrackedCameraError, (TrackedDeviceIndex_t, UInt32, EVRTrackedCameraFrameType, Cfloat, Cfloat, Ptr{HmdMatrix44_t},), nDeviceIndex, nCameraIndex, eFrameType, flZNear, flZFar, pProjection)
AcquireVideoStreamingService(                    this, nDeviceIndex, pHandle)                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).AcquireVideoStreamingService,  EVRTrackedCameraError, (TrackedDeviceIndex_t, Ptr{TrackedCameraHandle_t},), nDeviceIndex, pHandle)
ReleaseVideoStreamingService(                    this, hTrackedCamera)                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).ReleaseVideoStreamingService,  EVRTrackedCameraError, (TrackedCameraHandle_t,), hTrackedCamera)
GetVideoStreamFrameBuffer(                       this, hTrackedCamera, eFrameType, pFrameBuffer, nFrameBufferSize, pFrameHeader, nFrameHeaderSize)                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).GetVideoStreamFrameBuffer,  EVRTrackedCameraError, (TrackedCameraHandle_t, EVRTrackedCameraFrameType, Ptr{Cvoid}, UInt32, Ptr{CameraVideoStreamFrameHeader_t}, UInt32,), hTrackedCamera, eFrameType, pFrameBuffer, nFrameBufferSize, pFrameHeader, nFrameHeaderSize)
GetVideoStreamTextureSize(                       this, nDeviceIndex, eFrameType, pTextureBounds, pnWidth, pnHeight)                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).GetVideoStreamTextureSize,  EVRTrackedCameraError, (TrackedDeviceIndex_t, EVRTrackedCameraFrameType, Ptr{VRTextureBounds_t}, Ptr{UInt32}, Ptr{UInt32},), nDeviceIndex, eFrameType, pTextureBounds, pnWidth, pnHeight)
GetVideoStreamTextureD3D11(                      this, hTrackedCamera, eFrameType, pD3D11DeviceOrResource, ppD3D11ShaderResourceView, pFrameHeader, nFrameHeaderSize)                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).GetVideoStreamTextureD3D11,  EVRTrackedCameraError, (TrackedCameraHandle_t, EVRTrackedCameraFrameType, Ptr{Cvoid}, Ptr{Ptr{Cvoid}}, Ptr{CameraVideoStreamFrameHeader_t}, UInt32,), hTrackedCamera, eFrameType, pD3D11DeviceOrResource, ppD3D11ShaderResourceView, pFrameHeader, nFrameHeaderSize)
GetVideoStreamTextureGL(                         this, hTrackedCamera, eFrameType, pglTextureId, pFrameHeader, nFrameHeaderSize)                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).GetVideoStreamTextureGL,  EVRTrackedCameraError, (TrackedCameraHandle_t, EVRTrackedCameraFrameType, Ptr{glUInt_t}, Ptr{CameraVideoStreamFrameHeader_t}, UInt32,), hTrackedCamera, eFrameType, pglTextureId, pFrameHeader, nFrameHeaderSize)
ReleaseVideoStreamTextureGL(                     this, hTrackedCamera, glTextureId)                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRTrackedCamera_FnTable},this)).ReleaseVideoStreamTextureGL,  EVRTrackedCameraError, (TrackedCameraHandle_t, glUInt_t,), hTrackedCamera, glTextureId)
AddApplicationManifest(                          this, pchApplicationManifestFullPath, bTemporary)                                                                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).AddApplicationManifest,  EVRApplicationError, (Cstring, bool,), pchApplicationManifestFullPath, bTemporary)
RemoveApplicationManifest(                       this, pchApplicationManifestFullPath)                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).RemoveApplicationManifest,  EVRApplicationError, (Cstring,), pchApplicationManifestFullPath)
IsApplicationInstalled(                          this, pchAppKey)                                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).IsApplicationInstalled,  bool, (Cstring,), pchAppKey)
GetApplicationCount(                             this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationCount,  UInt32, ())
GetApplicationKeyByIndex(                        this, unApplicationIndex, pchAppKeyBuffer, unAppKeyBufferLen)                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationKeyByIndex,  EVRApplicationError, (UInt32, Cstring, UInt32,), unApplicationIndex, pchAppKeyBuffer, unAppKeyBufferLen)
GetApplicationKeyByProcessId(                    this, unProcessId, pchAppKeyBuffer, unAppKeyBufferLen)                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationKeyByProcessId,  EVRApplicationError, (UInt32, Cstring, UInt32,), unProcessId, pchAppKeyBuffer, unAppKeyBufferLen)
LaunchApplication(                               this, pchAppKey)                                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).LaunchApplication,  EVRApplicationError, (Cstring,), pchAppKey)
LaunchTemplateApplication(                       this, pchTemplateAppKey, pchNewAppKey, pKeys, unKeys)                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).LaunchTemplateApplication,  EVRApplicationError, (Cstring, Cstring, Ptr{AppOverrideKeys_t}, UInt32,), pchTemplateAppKey, pchNewAppKey, pKeys, unKeys)
LaunchApplicationFromMimeType(                   this, pchMimeType, pchArgs)                                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).LaunchApplicationFromMimeType,  EVRApplicationError, (Cstring, Cstring,), pchMimeType, pchArgs)
LaunchDashboardOverlay(                          this, pchAppKey)                                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).LaunchDashboardOverlay,  EVRApplicationError, (Cstring,), pchAppKey)
CancelApplicationLaunch(                         this, pchAppKey)                                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).CancelApplicationLaunch,  bool, (Cstring,), pchAppKey)
IdentifyApplication(                             this, unProcessId, pchAppKey)                                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).IdentifyApplication,  EVRApplicationError, (UInt32, Cstring,), unProcessId, pchAppKey)
GetApplicationProcessId(                         this, pchAppKey)                                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationProcessId,  UInt32, (Cstring,), pchAppKey)
GetApplicationsErrorNameFromEnum(                this, error)                                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationsErrorNameFromEnum,  Cstring, (EVRApplicationError,), error)
GetApplicationPropertyString(                    this, pchAppKey, eProperty, pchPropertyValueBuffer, unPropertyValueBufferLen, peError)                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationPropertyString,  UInt32, (Cstring, EVRApplicationProperty, Cstring, UInt32, Ptr{EVRApplicationError},), pchAppKey, eProperty, pchPropertyValueBuffer, unPropertyValueBufferLen, peError)
GetApplicationPropertyBool(                      this, pchAppKey, eProperty, peError)                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationPropertyBool,  bool, (Cstring, EVRApplicationProperty, Ptr{EVRApplicationError},), pchAppKey, eProperty, peError)
GetApplicationPropertyUint64(                    this, pchAppKey, eProperty, peError)                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationPropertyUint64,  UInt64, (Cstring, EVRApplicationProperty, Ptr{EVRApplicationError},), pchAppKey, eProperty, peError)
SetApplicationAutoLaunch(                        this, pchAppKey, bAutoLaunch)                                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).SetApplicationAutoLaunch,  EVRApplicationError, (Cstring, bool,), pchAppKey, bAutoLaunch)
GetApplicationAutoLaunch(                        this, pchAppKey)                                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationAutoLaunch,  bool, (Cstring,), pchAppKey)
SetDefaultApplicationForMimeType(                this, pchAppKey, pchMimeType)                                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).SetDefaultApplicationForMimeType,  EVRApplicationError, (Cstring, Cstring,), pchAppKey, pchMimeType)
GetDefaultApplicationForMimeType(                this, pchMimeType, pchAppKeyBuffer, unAppKeyBufferLen)                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetDefaultApplicationForMimeType,  bool, (Cstring, Cstring, UInt32,), pchMimeType, pchAppKeyBuffer, unAppKeyBufferLen)
GetApplicationSupportedMimeTypes(                this, pchAppKey, pchMimeTypesBuffer, unMimeTypesBuffer)                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationSupportedMimeTypes,  bool, (Cstring, Cstring, UInt32,), pchAppKey, pchMimeTypesBuffer, unMimeTypesBuffer)
GetApplicationsThatSupportMimeType(              this, pchMimeType, pchAppKeysThatSupportBuffer, unAppKeysThatSupportBuffer)                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationsThatSupportMimeType,  UInt32, (Cstring, Cstring, UInt32,), pchMimeType, pchAppKeysThatSupportBuffer, unAppKeysThatSupportBuffer)
GetApplicationLaunchArguments(                   this, unHandle, pchArgs, unArgs)                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationLaunchArguments,  UInt32, (UInt32, Cstring, UInt32,), unHandle, pchArgs, unArgs)
GetStartingApplication(                          this, pchAppKeyBuffer, unAppKeyBufferLen)                                                                                              = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetStartingApplication,  EVRApplicationError, (Cstring, UInt32,), pchAppKeyBuffer, unAppKeyBufferLen)
GetTransitionState(                              this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetTransitionState,  EVRApplicationTransitionState, ())
PerformApplicationPrelaunchCheck(                this, pchAppKey)                                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).PerformApplicationPrelaunchCheck,  EVRApplicationError, (Cstring,), pchAppKey)
GetApplicationsTransitionStateNameFromEnum(      this, state)                                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetApplicationsTransitionStateNameFromEnum,  Cstring, (EVRApplicationTransitionState,), state)
IsQuitUserPromptRequested(                       this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).IsQuitUserPromptRequested,  bool, ())
LaunchInternalProcess(                           this, pchBinaryPath, pchArguments, pchWorkingDirectory)                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).LaunchInternalProcess,  EVRApplicationError, (Cstring, Cstring, Cstring,), pchBinaryPath, pchArguments, pchWorkingDirectory)
GetCurrentSceneProcessId(                        this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRApplications_FnTable},this)).GetCurrentSceneProcessId,  UInt32, ())
GetCalibrationState(                             this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperone_FnTable},this)).GetCalibrationState,  ChaperoneCalibrationState, ())
GetPlayAreaSize(                                 this, pSizeX, pSizeZ)                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperone_FnTable},this)).GetPlayAreaSize,  bool, (Ptr{Cfloat}, Ptr{Cfloat},), pSizeX, pSizeZ)
GetPlayAreaRect(                                 this, rect)                                                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperone_FnTable},this)).GetPlayAreaRect,  bool, (Ptr{HmdQuad_t},), rect)
ReloadInfo(                                      this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperone_FnTable},this)).ReloadInfo,  Cvoid, ())
SetSceneColor(                                   this, color)                                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperone_FnTable},this)).SetSceneColor,  Cvoid, (HmdColor_t,), color)
GetBoundsColor(                                  this, pOutputColorArray, nNumOutputColors, flCollisionBoundsFadeDistance, pOutputCameraColor)                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperone_FnTable},this)).GetBoundsColor,  Cvoid, (Ptr{HmdColor_t}, Cint, Cfloat, Ptr{HmdColor_t},), pOutputColorArray, nNumOutputColors, flCollisionBoundsFadeDistance, pOutputCameraColor)
AreBoundsVisible(                                this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperone_FnTable},this)).AreBoundsVisible,  bool, ())
ForceBoundsVisible(                              this, bForce)                                                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperone_FnTable},this)).ForceBoundsVisible,  Cvoid, (bool,), bForce)
CommitWorkingCopy(                               this, configFile)                                                                                                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).CommitWorkingCopy,  bool, (EChaperoneConfigFile,), configFile)
RevertWorkingCopy(                               this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).RevertWorkingCopy,  Cvoid, ())
GetWorkingPlayAreaSize(                          this, pSizeX, pSizeZ)                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).GetWorkingPlayAreaSize,  bool, (Ptr{Cfloat}, Ptr{Cfloat},), pSizeX, pSizeZ)
GetWorkingPlayAreaRect(                          this, rect)                                                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).GetWorkingPlayAreaRect,  bool, (Ptr{HmdQuad_t},), rect)
GetWorkingCollisionBoundsInfo(                   this, pQuadsBuffer, punQuadsCount)                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).GetWorkingCollisionBoundsInfo,  bool, (Ptr{HmdQuad_t}, Ptr{UInt32},), pQuadsBuffer, punQuadsCount)
GetLiveCollisionBoundsInfo(                      this, pQuadsBuffer, punQuadsCount)                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).GetLiveCollisionBoundsInfo,  bool, (Ptr{HmdQuad_t}, Ptr{UInt32},), pQuadsBuffer, punQuadsCount)
GetWorkingSeatedZeroPoseToRawTrackingPose(       this, pmatSeatedZeroPoseToRawTrackingPose)                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).GetWorkingSeatedZeroPoseToRawTrackingPose,  bool, (Ptr{HmdMatrix34_t},), pmatSeatedZeroPoseToRawTrackingPose)
GetWorkingStandingZeroPoseToRawTrackingPose(     this, pmatStandingZeroPoseToRawTrackingPose)                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).GetWorkingStandingZeroPoseToRawTrackingPose,  bool, (Ptr{HmdMatrix34_t},), pmatStandingZeroPoseToRawTrackingPose)
SetWorkingPlayAreaSize(                          this, sizeX, sizeZ)                                                                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).SetWorkingPlayAreaSize,  Cvoid, (Cfloat, Cfloat,), sizeX, sizeZ)
SetWorkingCollisionBoundsInfo(                   this, pQuadsBuffer, unQuadsCount)                                                                                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).SetWorkingCollisionBoundsInfo,  Cvoid, (Ptr{HmdQuad_t}, UInt32,), pQuadsBuffer, unQuadsCount)
SetWorkingPerimeter(                             this, pPointBuffer, unPointCount)                                                                                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).SetWorkingPerimeter,  Cvoid, (Ptr{HmdVector2_t}, UInt32,), pPointBuffer, unPointCount)
SetWorkingSeatedZeroPoseToRawTrackingPose(       this, pMatSeatedZeroPoseToRawTrackingPose)                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).SetWorkingSeatedZeroPoseToRawTrackingPose,  Cvoid, (Ptr{HmdMatrix34_t},), pMatSeatedZeroPoseToRawTrackingPose)
SetWorkingStandingZeroPoseToRawTrackingPose(     this, pMatStandingZeroPoseToRawTrackingPose)                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).SetWorkingStandingZeroPoseToRawTrackingPose,  Cvoid, (Ptr{HmdMatrix34_t},), pMatStandingZeroPoseToRawTrackingPose)
ReloadFromDisk(                                  this, configFile)                                                                                                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).ReloadFromDisk,  Cvoid, (EChaperoneConfigFile,), configFile)
GetLiveSeatedZeroPoseToRawTrackingPose(          this, pmatSeatedZeroPoseToRawTrackingPose)                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).GetLiveSeatedZeroPoseToRawTrackingPose,  bool, (Ptr{HmdMatrix34_t},), pmatSeatedZeroPoseToRawTrackingPose)
ExportLiveToBuffer(                              this, pBuffer, pnBufferLength)                                                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).ExportLiveToBuffer,  bool, (Cstring, Ptr{UInt32},), pBuffer, pnBufferLength)
ImportFromBufferToWorking(                       this, pBuffer, nImportFlags)                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).ImportFromBufferToWorking,  bool, (Cstring, UInt32,), pBuffer, nImportFlags)
ShowWorkingSetPreview(                           this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).ShowWorkingSetPreview,  Cvoid, ())
HideWorkingSetPreview(                           this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRChaperoneSetup_FnTable},this)).HideWorkingSetPreview,  Cvoid, ())
SetTrackingSpace(                                this, eOrigin)                                                                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).SetTrackingSpace,  Cvoid, (ETrackingUniverseOrigin,), eOrigin)
GetTrackingSpace(                                this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetTrackingSpace,  ETrackingUniverseOrigin, ())
WaitGetPoses(                                    this, pRenderPoseArray, unRenderPoseArrayCount, pGamePoseArray, unGamePoseArrayCount)                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).WaitGetPoses,  EVRCompositorError, (Ptr{TrackedDevicePose_t}, UInt32, Ptr{TrackedDevicePose_t}, UInt32,), pRenderPoseArray, unRenderPoseArrayCount, pGamePoseArray, unGamePoseArrayCount)
GetLastPoses(                                    this, pRenderPoseArray, unRenderPoseArrayCount, pGamePoseArray, unGamePoseArrayCount)                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetLastPoses,  EVRCompositorError, (Ptr{TrackedDevicePose_t}, UInt32, Ptr{TrackedDevicePose_t}, UInt32,), pRenderPoseArray, unRenderPoseArrayCount, pGamePoseArray, unGamePoseArrayCount)
GetLastPoseForTrackedDeviceIndex(                this, unDeviceIndex, pOutputPose, pOutputGamePose)                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetLastPoseForTrackedDeviceIndex,  EVRCompositorError, (TrackedDeviceIndex_t, Ptr{TrackedDevicePose_t}, Ptr{TrackedDevicePose_t},), unDeviceIndex, pOutputPose, pOutputGamePose)
Submit(                                          this, eEye, pTexture, pBounds, nSubmitFlags)                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).Submit,  EVRCompositorError, (EVREye, Ptr{Texture_t}, Ptr{VRTextureBounds_t}, EVRSubmitFlags,), eEye, pTexture, pBounds, nSubmitFlags)
ClearLastSubmittedFrame(                         this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).ClearLastSubmittedFrame,  Cvoid, ())
PostPresentHandoff(                              this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).PostPresentHandoff,  Cvoid, ())
GetFrameTiming(                                  this, pTiming, unFramesAgo)                                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetFrameTiming,  bool, (Ptr{Compositor_FrameTiming}, UInt32,), pTiming, unFramesAgo)
GetFrameTimings(                                 this, pTiming, nFrames)                                                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetFrameTimings,  UInt32, (Ptr{Compositor_FrameTiming}, UInt32,), pTiming, nFrames)
GetFrameTimeRemaining(                           this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetFrameTimeRemaining,  Cfloat, ())
GetCumulativeStats(                              this, pStats, nStatsSizeInBytes)                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetCumulativeStats,  Cvoid, (Ptr{Compositor_CumulativeStats}, UInt32,), pStats, nStatsSizeInBytes)
FadeToColor(                                     this, fSeconds, fRed, fGreen, fBlue, fAlpha, bBackground)                                                                              = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).FadeToColor,  Cvoid, (Cfloat, Cfloat, Cfloat, Cfloat, Cfloat, bool,), fSeconds, fRed, fGreen, fBlue, fAlpha, bBackground)
GetCurrentFadeColor(                             this, bBackground)                                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetCurrentFadeColor,  HmdColor_t, (bool,), bBackground)
FadeGrid(                                        this, fSeconds, bFadeIn)                                                                                                               = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).FadeGrid,  Cvoid, (Cfloat, bool,), fSeconds, bFadeIn)
GetCurrentGridAlpha(                             this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetCurrentGridAlpha,  Cfloat, ())
SetSkyboxOverride(                               this, pTextures, unTextureCount)                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).SetSkyboxOverride,  EVRCompositorError, (Ptr{Texture_t}, UInt32,), pTextures, unTextureCount)
ClearSkyboxOverride(                             this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).ClearSkyboxOverride,  Cvoid, ())
CompositorBringToFront(                          this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).CompositorBringToFront,  Cvoid, ())
CompositorGoToBack(                              this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).CompositorGoToBack,  Cvoid, ())
CompositorQuit(                                  this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).CompositorQuit,  Cvoid, ())
IsFullscreen(                                    this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).IsFullscreen,  bool, ())
GetCurrentSceneFocusProcess(                     this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetCurrentSceneFocusProcess,  UInt32, ())
GetLastFrameRenderer(                            this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetLastFrameRenderer,  UInt32, ())
CanRenderScene(                                  this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).CanRenderScene,  bool, ())
ShowMirrorWindow(                                this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).ShowMirrorWindow,  Cvoid, ())
HideMirrorWindow(                                this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).HideMirrorWindow,  Cvoid, ())
IsMirrorWindowVisible(                           this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).IsMirrorWindowVisible,  bool, ())
CompositorDumpImages(                            this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).CompositorDumpImages,  Cvoid, ())
ShouldAppRenderWithLowResources(                 this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).ShouldAppRenderWithLowResources,  bool, ())
ForceInterleavedReprojectionOn(                  this, bOverride)                                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).ForceInterleavedReprojectionOn,  Cvoid, (bool,), bOverride)
ForceReconnectProcess(                           this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).ForceReconnectProcess,  Cvoid, ())
SuspendRendering(                                this, bSuspend)                                                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).SuspendRendering,  Cvoid, (bool,), bSuspend)
GetMirrorTextureD3D11(                           this, eEye, pD3D11DeviceOrResource, ppD3D11ShaderResourceView)                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetMirrorTextureD3D11,  EVRCompositorError, (EVREye, Ptr{Cvoid}, Ptr{Ptr{Cvoid}},), eEye, pD3D11DeviceOrResource, ppD3D11ShaderResourceView)
ReleaseMirrorTextureD3D11(                       this, pD3D11ShaderResourceView)                                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).ReleaseMirrorTextureD3D11,  Cvoid, (Ptr{Cvoid},), pD3D11ShaderResourceView)
GetMirrorTextureGL(                              this, eEye, pglTextureId, pglSharedTextureHandle)                                                                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetMirrorTextureGL,  EVRCompositorError, (EVREye, Ptr{glUInt_t}, Ptr{glSharedTextureHandle_t},), eEye, pglTextureId, pglSharedTextureHandle)
ReleaseSharedGLTexture(                          this, glTextureId, glSharedTextureHandle)                                                                                              = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).ReleaseSharedGLTexture,  bool, (glUInt_t, glSharedTextureHandle_t,), glTextureId, glSharedTextureHandle)
LockGLSharedTextureForAccess(                    this, glSharedTextureHandle)                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).LockGLSharedTextureForAccess,  Cvoid, (glSharedTextureHandle_t,), glSharedTextureHandle)
UnlockGLSharedTextureForAccess(                  this, glSharedTextureHandle)                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).UnlockGLSharedTextureForAccess,  Cvoid, (glSharedTextureHandle_t,), glSharedTextureHandle)
GetVulkanInstanceExtensionsRequired(             this, pchValue, unBufferSize)                                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetVulkanInstanceExtensionsRequired,  UInt32, (Cstring, UInt32,), pchValue, unBufferSize)
GetVulkanDeviceExtensionsRequired(               this, pPhysicalDevice, pchValue, unBufferSize)                                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).GetVulkanDeviceExtensionsRequired,  UInt32, (Ptr{VkPhysicalDevice_T}, Cstring, UInt32,), pPhysicalDevice, pchValue, unBufferSize)
SetExplicitTimingMode(                           this, eTimingMode)                                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).SetExplicitTimingMode,  Cvoid, (EVRCompositorTimingMode,), eTimingMode)
SubmitExplicitTimingData(                        this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).SubmitExplicitTimingData,  EVRCompositorError, ())
IsMotionSmoothingEnabled(                        this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRCompositor_FnTable},this)).IsMotionSmoothingEnabled,  bool, ())
FindOverlay(                                     this, pchOverlayKey, pOverlayHandle)                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).FindOverlay,  EVROverlayError, (Cstring, Ptr{VROverlayHandle_t},), pchOverlayKey, pOverlayHandle)
CreateOverlay(                                   this, pchOverlayKey, pchOverlayName, pOverlayHandle)                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).CreateOverlay,  EVROverlayError, (Cstring, Cstring, Ptr{VROverlayHandle_t},), pchOverlayKey, pchOverlayName, pOverlayHandle)
DestroyOverlay(                                  this, ulOverlayHandle)                                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).DestroyOverlay,  EVROverlayError, (VROverlayHandle_t,), ulOverlayHandle)
SetHighQualityOverlay(                           this, ulOverlayHandle)                                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetHighQualityOverlay,  EVROverlayError, (VROverlayHandle_t,), ulOverlayHandle)
GetHighQualityOverlay(                           this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetHighQualityOverlay,  VROverlayHandle_t, ())
GetOverlayKey(                                   this, ulOverlayHandle, pchValue, unBufferSize, pError)                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayKey,  UInt32, (VROverlayHandle_t, Cstring, UInt32, Ptr{EVROverlayError},), ulOverlayHandle, pchValue, unBufferSize, pError)
GetOverlayName(                                  this, ulOverlayHandle, pchValue, unBufferSize, pError)                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayName,  UInt32, (VROverlayHandle_t, Cstring, UInt32, Ptr{EVROverlayError},), ulOverlayHandle, pchValue, unBufferSize, pError)
SetOverlayName(                                  this, ulOverlayHandle, pchName)                                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayName,  EVROverlayError, (VROverlayHandle_t, Cstring,), ulOverlayHandle, pchName)
GetOverlayImageData(                             this, ulOverlayHandle, pvBuffer, unBufferSize, punWidth, punHeight)                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayImageData,  EVROverlayError, (VROverlayHandle_t, Ptr{Cvoid}, UInt32, Ptr{UInt32}, Ptr{UInt32},), ulOverlayHandle, pvBuffer, unBufferSize, punWidth, punHeight)
GetOverlayErrorNameFromEnum(                     this, error)                                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayErrorNameFromEnum,  Cstring, (EVROverlayError,), error)
SetOverlayRenderingPid(                          this, ulOverlayHandle, unPID)                                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayRenderingPid,  EVROverlayError, (VROverlayHandle_t, UInt32,), ulOverlayHandle, unPID)
GetOverlayRenderingPid(                          this, ulOverlayHandle)                                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayRenderingPid,  UInt32, (VROverlayHandle_t,), ulOverlayHandle)
SetOverlayFlag(                                  this, ulOverlayHandle, eOverlayFlag, bEnabled)                                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayFlag,  EVROverlayError, (VROverlayHandle_t, VROverlayFlags, bool,), ulOverlayHandle, eOverlayFlag, bEnabled)
GetOverlayFlag(                                  this, ulOverlayHandle, eOverlayFlag, pbEnabled)                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayFlag,  EVROverlayError, (VROverlayHandle_t, VROverlayFlags, Ptr{bool},), ulOverlayHandle, eOverlayFlag, pbEnabled)
SetOverlayColor(                                 this, ulOverlayHandle, fRed, fGreen, fBlue)                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayColor,  EVROverlayError, (VROverlayHandle_t, Cfloat, Cfloat, Cfloat,), ulOverlayHandle, fRed, fGreen, fBlue)
GetOverlayColor(                                 this, ulOverlayHandle, pfRed, pfGreen, pfBlue)                                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayColor,  EVROverlayError, (VROverlayHandle_t, Ptr{Cfloat}, Ptr{Cfloat}, Ptr{Cfloat},), ulOverlayHandle, pfRed, pfGreen, pfBlue)
SetOverlayAlpha(                                 this, ulOverlayHandle, fAlpha)                                                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayAlpha,  EVROverlayError, (VROverlayHandle_t, Cfloat,), ulOverlayHandle, fAlpha)
GetOverlayAlpha(                                 this, ulOverlayHandle, pfAlpha)                                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayAlpha,  EVROverlayError, (VROverlayHandle_t, Ptr{Cfloat},), ulOverlayHandle, pfAlpha)
SetOverlayTexelAspect(                           this, ulOverlayHandle, fTexelAspect)                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayTexelAspect,  EVROverlayError, (VROverlayHandle_t, Cfloat,), ulOverlayHandle, fTexelAspect)
GetOverlayTexelAspect(                           this, ulOverlayHandle, pfTexelAspect)                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayTexelAspect,  EVROverlayError, (VROverlayHandle_t, Ptr{Cfloat},), ulOverlayHandle, pfTexelAspect)
SetOverlaySortOrder(                             this, ulOverlayHandle, unSortOrder)                                                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlaySortOrder,  EVROverlayError, (VROverlayHandle_t, UInt32,), ulOverlayHandle, unSortOrder)
GetOverlaySortOrder(                             this, ulOverlayHandle, punSortOrder)                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlaySortOrder,  EVROverlayError, (VROverlayHandle_t, Ptr{UInt32},), ulOverlayHandle, punSortOrder)
SetOverlayWidthInMeters(                         this, ulOverlayHandle, fWidthInMeters)                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayWidthInMeters,  EVROverlayError, (VROverlayHandle_t, Cfloat,), ulOverlayHandle, fWidthInMeters)
GetOverlayWidthInMeters(                         this, ulOverlayHandle, pfWidthInMeters)                                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayWidthInMeters,  EVROverlayError, (VROverlayHandle_t, Ptr{Cfloat},), ulOverlayHandle, pfWidthInMeters)
SetOverlayAutoCurveDistanceRangeInMeters(        this, ulOverlayHandle, fMinDistanceInMeters, fMaxDistanceInMeters)                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayAutoCurveDistanceRangeInMeters,  EVROverlayError, (VROverlayHandle_t, Cfloat, Cfloat,), ulOverlayHandle, fMinDistanceInMeters, fMaxDistanceInMeters)
GetOverlayAutoCurveDistanceRangeInMeters(        this, ulOverlayHandle, pfMinDistanceInMeters, pfMaxDistanceInMeters)                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayAutoCurveDistanceRangeInMeters,  EVROverlayError, (VROverlayHandle_t, Ptr{Cfloat}, Ptr{Cfloat},), ulOverlayHandle, pfMinDistanceInMeters, pfMaxDistanceInMeters)
SetOverlayTextureColorSpace(                     this, ulOverlayHandle, eTextureColorSpace)                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayTextureColorSpace,  EVROverlayError, (VROverlayHandle_t, EColorSpace,), ulOverlayHandle, eTextureColorSpace)
GetOverlayTextureColorSpace(                     this, ulOverlayHandle, peTextureColorSpace)                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayTextureColorSpace,  EVROverlayError, (VROverlayHandle_t, Ptr{EColorSpace},), ulOverlayHandle, peTextureColorSpace)
SetOverlayTextureBounds(                         this, ulOverlayHandle, pOverlayTextureBounds)                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayTextureBounds,  EVROverlayError, (VROverlayHandle_t, Ptr{VRTextureBounds_t},), ulOverlayHandle, pOverlayTextureBounds)
GetOverlayTextureBounds(                         this, ulOverlayHandle, pOverlayTextureBounds)                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayTextureBounds,  EVROverlayError, (VROverlayHandle_t, Ptr{VRTextureBounds_t},), ulOverlayHandle, pOverlayTextureBounds)
GetOverlayRenderModel(                           this, ulOverlayHandle, pchValue, unBufferSize, pColor, pError)                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayRenderModel,  UInt32, (VROverlayHandle_t, Cstring, UInt32, Ptr{HmdColor_t}, Ptr{EVROverlayError},), ulOverlayHandle, pchValue, unBufferSize, pColor, pError)
SetOverlayRenderModel(                           this, ulOverlayHandle, pchRenderModel, pColor)                                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayRenderModel,  EVROverlayError, (VROverlayHandle_t, Cstring, Ptr{HmdColor_t},), ulOverlayHandle, pchRenderModel, pColor)
GetOverlayTransformType(                         this, ulOverlayHandle, peTransformType)                                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayTransformType,  EVROverlayError, (VROverlayHandle_t, Ptr{VROverlayTransformType},), ulOverlayHandle, peTransformType)
SetOverlayTransformAbsolute(                     this, ulOverlayHandle, eTrackingOrigin, pmatTrackingOriginToOverlayTransform)                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayTransformAbsolute,  EVROverlayError, (VROverlayHandle_t, ETrackingUniverseOrigin, Ptr{HmdMatrix34_t},), ulOverlayHandle, eTrackingOrigin, pmatTrackingOriginToOverlayTransform)
GetOverlayTransformAbsolute(                     this, ulOverlayHandle, peTrackingOrigin, pmatTrackingOriginToOverlayTransform)                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayTransformAbsolute,  EVROverlayError, (VROverlayHandle_t, Ptr{ETrackingUniverseOrigin}, Ptr{HmdMatrix34_t},), ulOverlayHandle, peTrackingOrigin, pmatTrackingOriginToOverlayTransform)
SetOverlayTransformTrackedDeviceRelative(        this, ulOverlayHandle, unTrackedDevice, pmatTrackedDeviceToOverlayTransform)                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayTransformTrackedDeviceRelative,  EVROverlayError, (VROverlayHandle_t, TrackedDeviceIndex_t, Ptr{HmdMatrix34_t},), ulOverlayHandle, unTrackedDevice, pmatTrackedDeviceToOverlayTransform)
GetOverlayTransformTrackedDeviceRelative(        this, ulOverlayHandle, punTrackedDevice, pmatTrackedDeviceToOverlayTransform)                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayTransformTrackedDeviceRelative,  EVROverlayError, (VROverlayHandle_t, Ptr{TrackedDeviceIndex_t}, Ptr{HmdMatrix34_t},), ulOverlayHandle, punTrackedDevice, pmatTrackedDeviceToOverlayTransform)
SetOverlayTransformTrackedDeviceComponent(       this, ulOverlayHandle, unDeviceIndex, pchComponentName)                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayTransformTrackedDeviceComponent,  EVROverlayError, (VROverlayHandle_t, TrackedDeviceIndex_t, Cstring,), ulOverlayHandle, unDeviceIndex, pchComponentName)
GetOverlayTransformTrackedDeviceComponent(       this, ulOverlayHandle, punDeviceIndex, pchComponentName, unComponentNameSize)                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayTransformTrackedDeviceComponent,  EVROverlayError, (VROverlayHandle_t, Ptr{TrackedDeviceIndex_t}, Cstring, UInt32,), ulOverlayHandle, punDeviceIndex, pchComponentName, unComponentNameSize)
GetOverlayTransformOverlayRelative(              this, ulOverlayHandle, ulOverlayHandleParent, pmatParentOverlayToOverlayTransform)                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayTransformOverlayRelative,  EVROverlayError, (VROverlayHandle_t, Ptr{VROverlayHandle_t}, Ptr{HmdMatrix34_t},), ulOverlayHandle, ulOverlayHandleParent, pmatParentOverlayToOverlayTransform)
SetOverlayTransformOverlayRelative(              this, ulOverlayHandle, ulOverlayHandleParent, pmatParentOverlayToOverlayTransform)                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayTransformOverlayRelative,  EVROverlayError, (VROverlayHandle_t, VROverlayHandle_t, Ptr{HmdMatrix34_t},), ulOverlayHandle, ulOverlayHandleParent, pmatParentOverlayToOverlayTransform)
ShowOverlay(                                     this, ulOverlayHandle)                                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).ShowOverlay,  EVROverlayError, (VROverlayHandle_t,), ulOverlayHandle)
HideOverlay(                                     this, ulOverlayHandle)                                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).HideOverlay,  EVROverlayError, (VROverlayHandle_t,), ulOverlayHandle)
IsOverlayVisible(                                this, ulOverlayHandle)                                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).IsOverlayVisible,  bool, (VROverlayHandle_t,), ulOverlayHandle)
GetTransformForOverlayCoordinates(               this, ulOverlayHandle, eTrackingOrigin, coordinatesInOverlay, pmatTransform)                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetTransformForOverlayCoordinates,  EVROverlayError, (VROverlayHandle_t, ETrackingUniverseOrigin, HmdVector2_t, Ptr{HmdMatrix34_t},), ulOverlayHandle, eTrackingOrigin, coordinatesInOverlay, pmatTransform)
PollNextOverlayEvent(                            this, ulOverlayHandle, pEvent, uncbVREvent)                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).PollNextOverlayEvent,  bool, (VROverlayHandle_t, Ptr{VREvent_t}, UInt32,), ulOverlayHandle, pEvent, uncbVREvent)
GetOverlayInputMethod(                           this, ulOverlayHandle, peInputMethod)                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayInputMethod,  EVROverlayError, (VROverlayHandle_t, Ptr{VROverlayInputMethod},), ulOverlayHandle, peInputMethod)
SetOverlayInputMethod(                           this, ulOverlayHandle, eInputMethod)                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayInputMethod,  EVROverlayError, (VROverlayHandle_t, VROverlayInputMethod,), ulOverlayHandle, eInputMethod)
GetOverlayMouseScale(                            this, ulOverlayHandle, pvecMouseScale)                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayMouseScale,  EVROverlayError, (VROverlayHandle_t, Ptr{HmdVector2_t},), ulOverlayHandle, pvecMouseScale)
SetOverlayMouseScale(                            this, ulOverlayHandle, pvecMouseScale)                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayMouseScale,  EVROverlayError, (VROverlayHandle_t, Ptr{HmdVector2_t},), ulOverlayHandle, pvecMouseScale)
ComputeOverlayIntersection(                      this, ulOverlayHandle, pParams, pResults)                                                                                              = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).ComputeOverlayIntersection,  bool, (VROverlayHandle_t, Ptr{VROverlayIntersectionParams_t}, Ptr{VROverlayIntersectionResults_t},), ulOverlayHandle, pParams, pResults)
IsHoverTargetOverlay(                            this, ulOverlayHandle)                                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).IsHoverTargetOverlay,  bool, (VROverlayHandle_t,), ulOverlayHandle)
GetGamepadFocusOverlay(                          this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetGamepadFocusOverlay,  VROverlayHandle_t, ())
SetGamepadFocusOverlay(                          this, ulNewFocusOverlay)                                                                                                               = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetGamepadFocusOverlay,  EVROverlayError, (VROverlayHandle_t,), ulNewFocusOverlay)
SetOverlayNeighbor(                              this, eDirection, ulFrom, ulTo)                                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayNeighbor,  EVROverlayError, (EOverlayDirection, VROverlayHandle_t, VROverlayHandle_t,), eDirection, ulFrom, ulTo)
MoveGamepadFocusToNeighbor(                      this, eDirection, ulFrom)                                                                                                              = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).MoveGamepadFocusToNeighbor,  EVROverlayError, (EOverlayDirection, VROverlayHandle_t,), eDirection, ulFrom)
SetOverlayDualAnalogTransform(                   this, ulOverlay, eWhich, pvCenter, fRadius)                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayDualAnalogTransform,  EVROverlayError, (VROverlayHandle_t, EDualAnalogWhich, Ptr{HmdVector2_t}, Cfloat,), ulOverlay, eWhich, pvCenter, fRadius)
GetOverlayDualAnalogTransform(                   this, ulOverlay, eWhich, pvCenter, pfRadius)                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayDualAnalogTransform,  EVROverlayError, (VROverlayHandle_t, EDualAnalogWhich, Ptr{HmdVector2_t}, Ptr{Cfloat},), ulOverlay, eWhich, pvCenter, pfRadius)
SetOverlayTexture(                               this, ulOverlayHandle, pTexture)                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayTexture,  EVROverlayError, (VROverlayHandle_t, Ptr{Texture_t},), ulOverlayHandle, pTexture)
ClearOverlayTexture(                             this, ulOverlayHandle)                                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).ClearOverlayTexture,  EVROverlayError, (VROverlayHandle_t,), ulOverlayHandle)
SetOverlayRaw(                                   this, ulOverlayHandle, pvBuffer, unWidth, unHeight, unDepth)                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayRaw,  EVROverlayError, (VROverlayHandle_t, Ptr{Cvoid}, UInt32, UInt32, UInt32,), ulOverlayHandle, pvBuffer, unWidth, unHeight, unDepth)
SetOverlayFromFile(                              this, ulOverlayHandle, pchFilePath)                                                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayFromFile,  EVROverlayError, (VROverlayHandle_t, Cstring,), ulOverlayHandle, pchFilePath)
GetOverlayTexture(                               this, ulOverlayHandle, pNativeTextureHandle, pNativeTextureRef, pWidth, pHeight, pNativeFormat, pAPIType, pColorSpace, pTextureBounds) = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayTexture,  EVROverlayError, (VROverlayHandle_t, Ptr{Ptr{Cvoid}}, Ptr{Cvoid}, Ptr{UInt32}, Ptr{UInt32}, Ptr{UInt32}, Ptr{ETextureType}, Ptr{EColorSpace}, Ptr{VRTextureBounds_t},), ulOverlayHandle, pNativeTextureHandle, pNativeTextureRef, pWidth, pHeight, pNativeFormat, pAPIType, pColorSpace, pTextureBounds)
ReleaseNativeOverlayHandle(                      this, ulOverlayHandle, pNativeTextureHandle)                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).ReleaseNativeOverlayHandle,  EVROverlayError, (VROverlayHandle_t, Ptr{Cvoid},), ulOverlayHandle, pNativeTextureHandle)
GetOverlayTextureSize(                           this, ulOverlayHandle, pWidth, pHeight)                                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayTextureSize,  EVROverlayError, (VROverlayHandle_t, Ptr{UInt32}, Ptr{UInt32},), ulOverlayHandle, pWidth, pHeight)
CreateDashboardOverlay(                          this, pchOverlayKey, pchOverlayFriendlyName, pMainHandle, pThumbnailHandle)                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).CreateDashboardOverlay,  EVROverlayError, (Cstring, Cstring, Ptr{VROverlayHandle_t}, Ptr{VROverlayHandle_t},), pchOverlayKey, pchOverlayFriendlyName, pMainHandle, pThumbnailHandle)
IsDashboardVisible(                              this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).IsDashboardVisible,  bool, ())
IsActiveDashboardOverlay(                        this, ulOverlayHandle)                                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).IsActiveDashboardOverlay,  bool, (VROverlayHandle_t,), ulOverlayHandle)
SetDashboardOverlaySceneProcess(                 this, ulOverlayHandle, unProcessId)                                                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetDashboardOverlaySceneProcess,  EVROverlayError, (VROverlayHandle_t, UInt32,), ulOverlayHandle, unProcessId)
GetDashboardOverlaySceneProcess(                 this, ulOverlayHandle, punProcessId)                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetDashboardOverlaySceneProcess,  EVROverlayError, (VROverlayHandle_t, Ptr{UInt32},), ulOverlayHandle, punProcessId)
ShowDashboard(                                   this, pchOverlayToShow)                                                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).ShowDashboard,  Cvoid, (Cstring,), pchOverlayToShow)
GetPrimaryDashboardDevice(                       this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetPrimaryDashboardDevice,  TrackedDeviceIndex_t, ())
ShowKeyboard(                                    this, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue)                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).ShowKeyboard,  EVROverlayError, (EGamepadTextInputMode, EGamepadTextInputLineMode, Cstring, UInt32, Cstring, bool, UInt64,), eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue)
ShowKeyboardForOverlay(                          this, ulOverlayHandle, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue)            = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).ShowKeyboardForOverlay,  EVROverlayError, (VROverlayHandle_t, EGamepadTextInputMode, EGamepadTextInputLineMode, Cstring, UInt32, Cstring, bool, UInt64,), ulOverlayHandle, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue)
GetKeyboardText(                                 this, pchText, cchText)                                                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetKeyboardText,  UInt32, (Cstring, UInt32,), pchText, cchText)
HideKeyboard(                                    this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).HideKeyboard,  Cvoid, ())
SetKeyboardTransformAbsolute(                    this, eTrackingOrigin, pmatTrackingOriginToKeyboardTransform)                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetKeyboardTransformAbsolute,  Cvoid, (ETrackingUniverseOrigin, Ptr{HmdMatrix34_t},), eTrackingOrigin, pmatTrackingOriginToKeyboardTransform)
SetKeyboardPositionForOverlay(                   this, ulOverlayHandle, avoidRect)                                                                                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetKeyboardPositionForOverlay,  Cvoid, (VROverlayHandle_t, HmdRect2_t,), ulOverlayHandle, avoidRect)
SetOverlayIntersectionMask(                      this, ulOverlayHandle, pMaskPrimitives, unNumMaskPrimitives, unPrimitiveSize)                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).SetOverlayIntersectionMask,  EVROverlayError, (VROverlayHandle_t, Ptr{VROverlayIntersectionMaskPrimitive_t}, UInt32, UInt32,), ulOverlayHandle, pMaskPrimitives, unNumMaskPrimitives, unPrimitiveSize)
GetOverlayFlags(                                 this, ulOverlayHandle, pFlags)                                                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).GetOverlayFlags,  EVROverlayError, (VROverlayHandle_t, Ptr{UInt32},), ulOverlayHandle, pFlags)
ShowMessageOverlay(                              this, pchText, pchCaption, pchButton0Text, pchButton1Text, pchButton2Text, pchButton3Text)                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).ShowMessageOverlay,  VRMessageOverlayResponse, (Cstring, Cstring, Cstring, Cstring, Cstring, Cstring,), pchText, pchCaption, pchButton0Text, pchButton1Text, pchButton2Text, pchButton3Text)
CloseMessageOverlay(                             this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVROverlay_FnTable},this)).CloseMessageOverlay,  Cvoid, ())
LoadRenderModel_Async(                           this, pchRenderModelName, ppRenderModel)                                                                                               = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).LoadRenderModel_Async,  EVRRenderModelError, (Cstring, Ptr{Ptr{RenderModel_t}},), pchRenderModelName, ppRenderModel)
FreeRenderModel(                                 this, pRenderModel)                                                                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).FreeRenderModel,  Cvoid, (Ptr{RenderModel_t},), pRenderModel)
LoadTexture_Async(                               this, textureId, ppTexture)                                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).LoadTexture_Async,  EVRRenderModelError, (TextureID_t, Ptr{Ptr{RenderModel_TextureMap_t}},), textureId, ppTexture)
FreeTexture(                                     this, pTexture)                                                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).FreeTexture,  Cvoid, (Ptr{RenderModel_TextureMap_t},), pTexture)
LoadTextureD3D11_Async(                          this, textureId, pD3D11Device, ppD3D11Texture2D)                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).LoadTextureD3D11_Async,  EVRRenderModelError, (TextureID_t, Ptr{Cvoid}, Ptr{Ptr{Cvoid}},), textureId, pD3D11Device, ppD3D11Texture2D)
LoadIntoTextureD3D11_Async(                      this, textureId, pDstTexture)                                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).LoadIntoTextureD3D11_Async,  EVRRenderModelError, (TextureID_t, Ptr{Cvoid},), textureId, pDstTexture)
FreeTextureD3D11(                                this, pD3D11Texture2D)                                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).FreeTextureD3D11,  Cvoid, (Ptr{Cvoid},), pD3D11Texture2D)
GetRenderModelName(                              this, unRenderModelIndex, pchRenderModelName, unRenderModelNameLen)                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).GetRenderModelName,  UInt32, (UInt32, Cstring, UInt32,), unRenderModelIndex, pchRenderModelName, unRenderModelNameLen)
GetRenderModelCount(                             this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).GetRenderModelCount,  UInt32, ())
GetComponentCount(                               this, pchRenderModelName)                                                                                                              = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).GetComponentCount,  UInt32, (Cstring,), pchRenderModelName)
GetComponentName(                                this, pchRenderModelName, unComponentIndex, pchComponentName, unComponentNameLen)                                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).GetComponentName,  UInt32, (Cstring, UInt32, Cstring, UInt32,), pchRenderModelName, unComponentIndex, pchComponentName, unComponentNameLen)
GetComponentButtonMask(                          this, pchRenderModelName, pchComponentName)                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).GetComponentButtonMask,  UInt64, (Cstring, Cstring,), pchRenderModelName, pchComponentName)
GetComponentRenderModelName(                     this, pchRenderModelName, pchComponentName, pchComponentRenderModelName, unComponentRenderModelNameLen)                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).GetComponentRenderModelName,  UInt32, (Cstring, Cstring, Cstring, UInt32,), pchRenderModelName, pchComponentName, pchComponentRenderModelName, unComponentRenderModelNameLen)
GetComponentStateForDevicePath(                  this, pchRenderModelName, pchComponentName, devicePath, pState, pComponentState)                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).GetComponentStateForDevicePath,  bool, (Cstring, Cstring, VRInputValueHandle_t, Ptr{RenderModel_ControllerMode_State_t}, Ptr{RenderModel_ComponentState_t},), pchRenderModelName, pchComponentName, devicePath, pState, pComponentState)
GetComponentState(                               this, pchRenderModelName, pchComponentName, pControllerState, pState, pComponentState)                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).GetComponentState,  bool, (Cstring, Cstring, Ptr{VRControllerState_t}, Ptr{RenderModel_ControllerMode_State_t}, Ptr{RenderModel_ComponentState_t},), pchRenderModelName, pchComponentName, pControllerState, pState, pComponentState)
RenderModelHasComponent(                         this, pchRenderModelName, pchComponentName)                                                                                            = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).RenderModelHasComponent,  bool, (Cstring, Cstring,), pchRenderModelName, pchComponentName)
GetRenderModelThumbnailURL(                      this, pchRenderModelName, pchThumbnailURL, unThumbnailURLLen, peError)                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).GetRenderModelThumbnailURL,  UInt32, (Cstring, Cstring, UInt32, Ptr{EVRRenderModelError},), pchRenderModelName, pchThumbnailURL, unThumbnailURLLen, peError)
GetRenderModelOriginalPath(                      this, pchRenderModelName, pchOriginalPath, unOriginalPathLen, peError)                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).GetRenderModelOriginalPath,  UInt32, (Cstring, Cstring, UInt32, Ptr{EVRRenderModelError},), pchRenderModelName, pchOriginalPath, unOriginalPathLen, peError)
GetRenderModelErrorNameFromEnum(                 this, error)                                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRRenderModels_FnTable},this)).GetRenderModelErrorNameFromEnum,  Cstring, (EVRRenderModelError,), error)
CreateNotification(                              this, ulOverlayHandle, ulUserValue, type, pchText, style, pImage, pNotificationId)                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRNotifications_FnTable},this)).CreateNotification,  EVRNotificationError, (VROverlayHandle_t, UInt64, EVRNotificationType, Cstring, EVRNotificationStyle, Ptr{NotificationBitmap_t}, Ptr{VRNotificationId},), ulOverlayHandle, ulUserValue, type, pchText, style, pImage, pNotificationId)
RemoveNotification(                              this, notificationId)                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRNotifications_FnTable},this)).RemoveNotification,  EVRNotificationError, (VRNotificationId,), notificationId)
GetSettingsErrorNameFromEnum(                    this, eError)                                                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).GetSettingsErrorNameFromEnum,  Cstring, (EVRSettingsError,), eError)
Sync(                                            this, bForce, peError)                                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).Sync,  bool, (bool, Ptr{EVRSettingsError},), bForce, peError)
SetBool(                                         this, pchSection, pchSettingsKey, bValue, peError)                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).SetBool,  Cvoid, (Cstring, Cstring, bool, Ptr{EVRSettingsError},), pchSection, pchSettingsKey, bValue, peError)
SetInt32(                                        this, pchSection, pchSettingsKey, nValue, peError)                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).SetInt32,  Cvoid, (Cstring, Cstring, Int32, Ptr{EVRSettingsError},), pchSection, pchSettingsKey, nValue, peError)
SetFloat(                                        this, pchSection, pchSettingsKey, flValue, peError)                                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).SetFloat,  Cvoid, (Cstring, Cstring, Cfloat, Ptr{EVRSettingsError},), pchSection, pchSettingsKey, flValue, peError)
SetString(                                       this, pchSection, pchSettingsKey, pchValue, peError)                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).SetString,  Cvoid, (Cstring, Cstring, Cstring, Ptr{EVRSettingsError},), pchSection, pchSettingsKey, pchValue, peError)
GetBool(                                         this, pchSection, pchSettingsKey, peError)                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).GetBool,  bool, (Cstring, Cstring, Ptr{EVRSettingsError},), pchSection, pchSettingsKey, peError)
GetInt32(                                        this, pchSection, pchSettingsKey, peError)                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).GetInt32,  Int32, (Cstring, Cstring, Ptr{EVRSettingsError},), pchSection, pchSettingsKey, peError)
GetFloat(                                        this, pchSection, pchSettingsKey, peError)                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).GetFloat,  Cfloat, (Cstring, Cstring, Ptr{EVRSettingsError},), pchSection, pchSettingsKey, peError)
GetString(                                       this, pchSection, pchSettingsKey, pchValue, unValueLen, peError)                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).GetString,  Cvoid, (Cstring, Cstring, Cstring, UInt32, Ptr{EVRSettingsError},), pchSection, pchSettingsKey, pchValue, unValueLen, peError)
RemoveSection(                                   this, pchSection, peError)                                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).RemoveSection,  Cvoid, (Cstring, Ptr{EVRSettingsError},), pchSection, peError)
RemoveKeyInSection(                              this, pchSection, pchSettingsKey, peError)                                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSettings_FnTable},this)).RemoveKeyInSection,  Cvoid, (Cstring, Cstring, Ptr{EVRSettingsError},), pchSection, pchSettingsKey, peError)
RequestScreenshot(                               this, pOutScreenshotHandle, type, pchPreviewFilename, pchVRFilename)                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRScreenshots_FnTable},this)).RequestScreenshot,  EVRScreenshotError, (Ptr{ScreenshotHandle_t}, EVRScreenshotType, Cstring, Cstring,), pOutScreenshotHandle, type, pchPreviewFilename, pchVRFilename)
HookScreenshot(                                  this, pSupportedTypes, numTypes)                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRScreenshots_FnTable},this)).HookScreenshot,  EVRScreenshotError, (Ptr{EVRScreenshotType}, Cint,), pSupportedTypes, numTypes)
GetScreenshotPropertyType(                       this, screenshotHandle, pError)                                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVRScreenshots_FnTable},this)).GetScreenshotPropertyType,  EVRScreenshotType, (ScreenshotHandle_t, Ptr{EVRScreenshotError},), screenshotHandle, pError)
GetScreenshotPropertyFilename(                   this, screenshotHandle, filenameType, pchFilename, cchFilename, pError)                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRScreenshots_FnTable},this)).GetScreenshotPropertyFilename,  UInt32, (ScreenshotHandle_t, EVRScreenshotPropertyFilenames, Cstring, UInt32, Ptr{EVRScreenshotError},), screenshotHandle, filenameType, pchFilename, cchFilename, pError)
UpdateScreenshotProgress(                        this, screenshotHandle, flProgress)                                                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVRScreenshots_FnTable},this)).UpdateScreenshotProgress,  EVRScreenshotError, (ScreenshotHandle_t, Cfloat,), screenshotHandle, flProgress)
TakeStereoScreenshot(                            this, pOutScreenshotHandle, pchPreviewFilename, pchVRFilename)                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVRScreenshots_FnTable},this)).TakeStereoScreenshot,  EVRScreenshotError, (Ptr{ScreenshotHandle_t}, Cstring, Cstring,), pOutScreenshotHandle, pchPreviewFilename, pchVRFilename)
SubmitScreenshot(                                this, screenshotHandle, type, pchSourcePreviewFilename, pchSourceVRFilename)                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRScreenshots_FnTable},this)).SubmitScreenshot,  EVRScreenshotError, (ScreenshotHandle_t, EVRScreenshotType, Cstring, Cstring,), screenshotHandle, type, pchSourcePreviewFilename, pchSourceVRFilename)
LoadSharedResource(                              this, pchResourceName, pchBuffer, unBufferLen)                                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVRResources_FnTable},this)).LoadSharedResource,  UInt32, (Cstring, Cstring, UInt32,), pchResourceName, pchBuffer, unBufferLen)
GetResourceFullPath(                             this, pchResourceName, pchResourceTypeDirectory, pchPathBuffer, unBufferLen)                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRResources_FnTable},this)).GetResourceFullPath,  UInt32, (Cstring, Cstring, Cstring, UInt32,), pchResourceName, pchResourceTypeDirectory, pchPathBuffer, unBufferLen)
GetDriverCount(                                  this)                                                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_Cint_FnTable},this)).GetDriverCount,  UInt32, ())
GetDriverName(                                   this, nDriver, pchValue, unBufferSize)                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_Cint_FnTable},this)).GetDriverName,  UInt32, (DriverId_t, Cstring, UInt32,), nDriver, pchValue, unBufferSize)
GetDriverHandle(                                 this, pchDriverName)                                                                                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_Cint_FnTable},this)).GetDriverHandle,  DriverHandle_t, (Cstring,), pchDriverName)
SetActionManifestPath(                           this, pchActionManifestPath)                                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).SetActionManifestPath,  EVRInputError, (Cstring,), pchActionManifestPath)
GetActionSetHandle(                              this, pchActionSetName, pHandle)                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetActionSetHandle,  EVRInputError, (Cstring, Ptr{VRActionSetHandle_t},), pchActionSetName, pHandle)
GetActionHandle(                                 this, pchActionName, pHandle)                                                                                                          = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetActionHandle,  EVRInputError, (Cstring, Ptr{VRActionHandle_t},), pchActionName, pHandle)
GetInputSourceHandle(                            this, pchInputSourcePath, pHandle)                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetInputSourceHandle,  EVRInputError, (Cstring, Ptr{VRInputValueHandle_t},), pchInputSourcePath, pHandle)
UpdateActionState(                               this, pSets, unSizeOfVRSelectedActionSet_t, unSetCount)                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).UpdateActionState,  EVRInputError, (Ptr{VRActiveActionSet_t}, UInt32, UInt32,), pSets, unSizeOfVRSelectedActionSet_t, unSetCount)
GetDigitalActionData(                            this, action, pActionData, unActionDataSize, ulRestrictToDevice)                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetDigitalActionData,  EVRInputError, (VRActionHandle_t, Ptr{InputDigitalActionData_t}, UInt32, VRInputValueHandle_t,), action, pActionData, unActionDataSize, ulRestrictToDevice)
GetAnalogActionData(                             this, action, pActionData, unActionDataSize, ulRestrictToDevice)                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetAnalogActionData,  EVRInputError, (VRActionHandle_t, Ptr{InputAnalogActionData_t}, UInt32, VRInputValueHandle_t,), action, pActionData, unActionDataSize, ulRestrictToDevice)
GetPoseActionData(                               this, action, eOrigin, fPredictedSecondsFromNow, pActionData, unActionDataSize, ulRestrictToDevice)                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetPoseActionData,  EVRInputError, (VRActionHandle_t, ETrackingUniverseOrigin, Cfloat, Ptr{InputPoseActionData_t}, UInt32, VRInputValueHandle_t,), action, eOrigin, fPredictedSecondsFromNow, pActionData, unActionDataSize, ulRestrictToDevice)
GetSkeletalActionData(                           this, action, pActionData, unActionDataSize)                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetSkeletalActionData,  EVRInputError, (VRActionHandle_t, Ptr{InputSkeletalActionData_t}, UInt32,), action, pActionData, unActionDataSize)
GetBoneCount(                                    this, action, pBoneCount)                                                                                                              = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetBoneCount,  EVRInputError, (VRActionHandle_t, Ptr{UInt32},), action, pBoneCount)
GetBoneHierarchy(                                this, action, pParentIndices, unIndexArayCount)                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetBoneHierarchy,  EVRInputError, (VRActionHandle_t, Ptr{BoneIndex_t}, UInt32,), action, pParentIndices, unIndexArayCount)
GetBoneName(                                     this, action, nBoneIndex, pchBoneName, unNameBufferSize)                                                                               = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetBoneName,  EVRInputError, (VRActionHandle_t, BoneIndex_t, Cstring, UInt32,), action, nBoneIndex, pchBoneName, unNameBufferSize)
GetSkeletalReferenceTransforms(                  this, action, eTransformSpace, eReferencePose, pTransformArray, unTransformArrayCount)                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetSkeletalReferenceTransforms,  EVRInputError, (VRActionHandle_t, EVRSkeletalTransformSpace, EVRSkeletalReferencePose, Ptr{VRBoneTransform_t}, UInt32,), action, eTransformSpace, eReferencePose, pTransformArray, unTransformArrayCount)
GetSkeletalTrackingLevel(                        this, action, pSkeletalTrackingLevel)                                                                                                  = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetSkeletalTrackingLevel,  EVRInputError, (VRActionHandle_t, Ptr{EVRSkeletalTrackingLevel},), action, pSkeletalTrackingLevel)
GetSkeletalBoneData(                             this, action, eTransformSpace, eMotionRange, pTransformArray, unTransformArrayCount)                                                   = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetSkeletalBoneData,  EVRInputError, (VRActionHandle_t, EVRSkeletalTransformSpace, EVRSkeletalMotionRange, Ptr{VRBoneTransform_t}, UInt32,), action, eTransformSpace, eMotionRange, pTransformArray, unTransformArrayCount)
GetSkeletalSummaryData(                          this, action, pSkeletalSummaryData)                                                                                                    = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetSkeletalSummaryData,  EVRInputError, (VRActionHandle_t, Ptr{VRSkeletalSummaryData_t},), action, pSkeletalSummaryData)
GetSkeletalBoneDataCompressed(                   this, action, eMotionRange, pvCompressedData, unCompressedSize, punRequiredCompressedSize)                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetSkeletalBoneDataCompressed,  EVRInputError, (VRActionHandle_t, EVRSkeletalMotionRange, Ptr{Cvoid}, UInt32, Ptr{UInt32},), action, eMotionRange, pvCompressedData, unCompressedSize, punRequiredCompressedSize)
DecompressSkeletalBoneData(                      this, pvCompressedBuffer, unCompressedBufferSize, eTransformSpace, pTransformArray, unTransformArrayCount)                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).DecompressSkeletalBoneData,  EVRInputError, (Ptr{Cvoid}, UInt32, EVRSkeletalTransformSpace, Ptr{VRBoneTransform_t}, UInt32,), pvCompressedBuffer, unCompressedBufferSize, eTransformSpace, pTransformArray, unTransformArrayCount)
TriggerHapticVibrationAction(                    this, action, fStartSecondsFromNow, fDurationSeconds, fFrequency, fAmplitude, ulRestrictToDevice)                                      = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).TriggerHapticVibrationAction,  EVRInputError, (VRActionHandle_t, Cfloat, Cfloat, Cfloat, Cfloat, VRInputValueHandle_t,), action, fStartSecondsFromNow, fDurationSeconds, fFrequency, fAmplitude, ulRestrictToDevice)
GetActionOrigins(                                this, actionSetHandle, digitalActionHandle, originsOut, originOutCount)                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetActionOrigins,  EVRInputError, (VRActionSetHandle_t, VRActionHandle_t, Ptr{VRInputValueHandle_t}, UInt32,), actionSetHandle, digitalActionHandle, originsOut, originOutCount)
GetOriginLocalizedName(                          this, origin, pchNameArray, unNameArraySize, unStringSectionsToInclude)                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetOriginLocalizedName,  EVRInputError, (VRInputValueHandle_t, Cstring, UInt32, Int32,), origin, pchNameArray, unNameArraySize, unStringSectionsToInclude)
GetOriginTrackedDeviceInfo(                      this, origin, pOriginInfo, unOriginInfoSize)                                                                                           = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).GetOriginTrackedDeviceInfo,  EVRInputError, (VRInputValueHandle_t, Ptr{InputOriginInfo_t}, UInt32,), origin, pOriginInfo, unOriginInfoSize)
ShowActionOrigins(                               this, actionSetHandle, ulActionHandle)                                                                                                 = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).ShowActionOrigins,  EVRInputError, (VRActionSetHandle_t, VRActionHandle_t,), actionSetHandle, ulActionHandle)
ShowBindingsForActionSet(                        this, pSets, unSizeOfVRSelectedActionSet_t, unSetCount, originToHighlight)                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRInput_FnTable},this)).ShowBindingsForActionSet,  EVRInputError, (Ptr{VRActiveActionSet_t}, UInt32, UInt32, VRInputValueHandle_t,), pSets, unSizeOfVRSelectedActionSet_t, unSetCount, originToHighlight)
Open(                                            this, pchPath, mode, unElementSize, unElements, pulBuffer)                                                                             = ccall(unsafe_load(reinterpret(Ptr{VR_IVRIOBuffer_FnTable},this)).Open,  EIOBufferError, (Cstring, EIOBufferMode, UInt32, UInt32, Ptr{IOBufferHandle_t},), pchPath, mode, unElementSize, unElements, pulBuffer)
Close(                                           this, ulBuffer)                                                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVRIOBuffer_FnTable},this)).Close,  EIOBufferError, (IOBufferHandle_t,), ulBuffer)
Read(                                            this, ulBuffer, pDst, unBytes, punRead)                                                                                                = ccall(unsafe_load(reinterpret(Ptr{VR_IVRIOBuffer_FnTable},this)).Read,  EIOBufferError, (IOBufferHandle_t, Ptr{Cvoid}, UInt32, Ptr{UInt32},), ulBuffer, pDst, unBytes, punRead)
Write(                                           this, ulBuffer, pSrc, unBytes)                                                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVRIOBuffer_FnTable},this)).Write,  EIOBufferError, (IOBufferHandle_t, Ptr{Cvoid}, UInt32,), ulBuffer, pSrc, unBytes)
PropertyContainer(                               this, ulBuffer)                                                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVRIOBuffer_FnTable},this)).PropertyContainer,  PropertyContainerHandle_t, (IOBufferHandle_t,), ulBuffer)
HasReaders(                                      this, ulBuffer)                                                                                                                        = ccall(unsafe_load(reinterpret(Ptr{VR_IVRIOBuffer_FnTable},this)).HasReaders,  bool, (IOBufferHandle_t,), ulBuffer)
CreateSpatialAnchorFromDescriptor(               this, pchDescriptor, pHandleOut)                                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSpatialAnchors_FnTable},this)).CreateSpatialAnchorFromDescriptor,  EVRSpatialAnchorError, (Cstring, Ptr{SpatialAnchorHandle_t},), pchDescriptor, pHandleOut)
CreateSpatialAnchorFromPose(                     this, unDeviceIndex, eOrigin, pPose, pHandleOut)                                                                                       = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSpatialAnchors_FnTable},this)).CreateSpatialAnchorFromPose,  EVRSpatialAnchorError, (TrackedDeviceIndex_t, ETrackingUniverseOrigin, Ptr{SpatialAnchorPose_t}, Ptr{SpatialAnchorHandle_t},), unDeviceIndex, eOrigin, pPose, pHandleOut)
GetSpatialAnchorPose(                            this, unHandle, eOrigin, pPoseOut)                                                                                                     = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSpatialAnchors_FnTable},this)).GetSpatialAnchorPose,  EVRSpatialAnchorError, (SpatialAnchorHandle_t, ETrackingUniverseOrigin, Ptr{SpatialAnchorPose_t},), unHandle, eOrigin, pPoseOut)
GetSpatialAnchorDescriptor(                      this, unHandle, pchDescriptorOut, punDescriptorBufferLenInOut)                                                                         = ccall(unsafe_load(reinterpret(Ptr{VR_IVRSpatialAnchors_FnTable},this)).GetSpatialAnchorDescriptor,  EVRSpatialAnchorError, (SpatialAnchorHandle_t, Cstring, Ptr{UInt32},), unHandle, pchDescriptorOut, punDescriptorBufferLenInOut)
